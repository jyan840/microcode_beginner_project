; SMT-LIBv2 description generated by Yosys 0.46+124 (git sha1 d1695ad99, g++ 15.0.0 -fPIC -O3)
; yosys-smt2-module nerv_regs
(declare-sort |nerv_regs_s| 0)
(declare-fun |nerv_regs_is| (|nerv_regs_s|) Bool)
(declare-fun |nerv_regs#0| (|nerv_regs_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |nerv_regs_n clk| ((state |nerv_regs_s|)) Bool (|nerv_regs#0| state))
(declare-fun |nerv_regs#1| (|nerv_regs_s|) (_ BitVec 32)) ; \next_rd
; yosys-smt2-input next_rd 32
; yosys-smt2-witness {"offset": 0, "path": ["\\next_rd"], "smtname": "next_rd", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |nerv_regs_n next_rd| ((state |nerv_regs_s|)) (_ BitVec 32) (|nerv_regs#1| state))
(declare-fun |nerv_regs#2| (|nerv_regs_s|) Bool) ; \next_wr
; yosys-smt2-input next_wr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\next_wr"], "smtname": "next_wr", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |nerv_regs_n next_wr| ((state |nerv_regs_s|)) Bool (|nerv_regs#2| state))
(declare-fun |nerv_regs#3| (|nerv_regs_s|) (_ BitVec 5)) ; \raddr1
; yosys-smt2-input raddr1 5
; yosys-smt2-witness {"offset": 0, "path": ["\\raddr1"], "smtname": "raddr1", "smtoffset": 0, "type": "input", "width": 5}
(define-fun |nerv_regs_n raddr1| ((state |nerv_regs_s|)) (_ BitVec 5) (|nerv_regs#3| state))
(declare-fun |nerv_regs#4| (|nerv_regs_s|) (_ BitVec 5)) ; \raddr2
; yosys-smt2-input raddr2 5
; yosys-smt2-witness {"offset": 0, "path": ["\\raddr2"], "smtname": "raddr2", "smtoffset": 0, "type": "input", "width": 5}
(define-fun |nerv_regs_n raddr2| ((state |nerv_regs_s|)) (_ BitVec 5) (|nerv_regs#4| state))
; yosys-smt2-memory regs 5 32 2 1 sync
; yosys-smt2-witness {"path": ["$memrd$\\regs$regfile.v:15$9"], "rom": false, "size": 32, "smtname": "regs", "statebv": false, "type": "mem", "uninitialized": [{"offset": 0, "width": 1024}], "width": 32}
(declare-fun |nerv_regs#5#0| (|nerv_regs_s|) (Array (_ BitVec 5) (_ BitVec 32))) ; regs
(define-fun |nerv_regs_m regs| ((state |nerv_regs_s|)) (Array (_ BitVec 5) (_ BitVec 32)) (|nerv_regs#5#0| state))
(define-fun |nerv_regs_m:R0A regs| ((state |nerv_regs_s|)) (_ BitVec 5) (|nerv_regs#4| state)) ; \raddr2
(define-fun |nerv_regs#6| ((state |nerv_regs_s|)) (_ BitVec 32) (select (|nerv_regs#5#0| state) (|nerv_regs_m:R0A regs| state))) ; \rdata2
(define-fun |nerv_regs_m:R0D regs| ((state |nerv_regs_s|)) (_ BitVec 32) (|nerv_regs#6| state))
(define-fun |nerv_regs_m:R1A regs| ((state |nerv_regs_s|)) (_ BitVec 5) (|nerv_regs#3| state)) ; \raddr1
(define-fun |nerv_regs#7| ((state |nerv_regs_s|)) (_ BitVec 32) (select (|nerv_regs#5#0| state) (|nerv_regs_m:R1A regs| state))) ; \rdata1
(define-fun |nerv_regs_m:R1D regs| ((state |nerv_regs_s|)) (_ BitVec 32) (|nerv_regs#7| state))
; yosys-smt2-output rdata1 32
(define-fun |nerv_regs_n rdata1| ((state |nerv_regs_s|)) (_ BitVec 32) (|nerv_regs#7| state))
; yosys-smt2-output rdata2 32
(define-fun |nerv_regs_n rdata2| ((state |nerv_regs_s|)) (_ BitVec 32) (|nerv_regs#6| state))
(declare-fun |nerv_regs#8| (|nerv_regs_s|) (_ BitVec 5)) ; \wr_rd
; yosys-smt2-input wr_rd 5
; yosys-smt2-witness {"offset": 0, "path": ["\\wr_rd"], "smtname": "wr_rd", "smtoffset": 0, "type": "input", "width": 5}
(define-fun |nerv_regs_n wr_rd| ((state |nerv_regs_s|)) (_ BitVec 5) (|nerv_regs#8| state))
(define-fun |nerv_regs#9| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 0 0) (|nerv_regs#8| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3 [0]
(define-fun |nerv_regs#10| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 1 1) (|nerv_regs#8| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3 [1]
(define-fun |nerv_regs#11| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 2 2) (|nerv_regs#8| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3 [2]
(define-fun |nerv_regs#12| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 3 3) (|nerv_regs#8| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3 [3]
(define-fun |nerv_regs#13| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 4 4) (|nerv_regs#8| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3 [4]
(define-fun |nerv_regs#14| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 0 0) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [0]
(define-fun |nerv_regs#15| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 1 1) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [1]
(define-fun |nerv_regs#16| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 2 2) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [2]
(define-fun |nerv_regs#17| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 3 3) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [3]
(define-fun |nerv_regs#18| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 4 4) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [4]
(define-fun |nerv_regs#19| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 5 5) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [5]
(define-fun |nerv_regs#20| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 6 6) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [6]
(define-fun |nerv_regs#21| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 7 7) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [7]
(define-fun |nerv_regs#22| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 8 8) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [8]
(define-fun |nerv_regs#23| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 9 9) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [9]
(define-fun |nerv_regs#24| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 10 10) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [10]
(define-fun |nerv_regs#25| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 11 11) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [11]
(define-fun |nerv_regs#26| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 12 12) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [12]
(define-fun |nerv_regs#27| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 13 13) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [13]
(define-fun |nerv_regs#28| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 14 14) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [14]
(define-fun |nerv_regs#29| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 15 15) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [15]
(define-fun |nerv_regs#30| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 16 16) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [16]
(define-fun |nerv_regs#31| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 17 17) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [17]
(define-fun |nerv_regs#32| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 18 18) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [18]
(define-fun |nerv_regs#33| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 19 19) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [19]
(define-fun |nerv_regs#34| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 20 20) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [20]
(define-fun |nerv_regs#35| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 21 21) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [21]
(define-fun |nerv_regs#36| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 22 22) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [22]
(define-fun |nerv_regs#37| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 23 23) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [23]
(define-fun |nerv_regs#38| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 24 24) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [24]
(define-fun |nerv_regs#39| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 25 25) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [25]
(define-fun |nerv_regs#40| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 26 26) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [26]
(define-fun |nerv_regs#41| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 27 27) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [27]
(define-fun |nerv_regs#42| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 28 28) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [28]
(define-fun |nerv_regs#43| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 29 29) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [29]
(define-fun |nerv_regs#44| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 30 30) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [30]
(define-fun |nerv_regs#45| ((state |nerv_regs_s|)) Bool (ite (|nerv_regs#2| state) (= ((_ extract 31 31) (|nerv_regs#1| state)) #b1) false)) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4 [31]
(define-fun |nerv_regs_m:W0A regs| ((state |nerv_regs_s|)) (_ BitVec 5) (concat (ite (|nerv_regs#13| state) #b1 #b0) (concat (ite (|nerv_regs#12| state) #b1 #b0) (concat (ite (|nerv_regs#11| state) #b1 #b0) (concat (ite (|nerv_regs#10| state) #b1 #b0) (ite (|nerv_regs#9| state) #b1 #b0)))))) ; $0$memwr$\regs$regfile.v:13$1_ADDR[4:0]$3
(define-fun |nerv_regs_m:W0D regs| ((state |nerv_regs_s|)) (_ BitVec 32) (concat (ite (|nerv_regs#45| state) #b1 #b0) (concat (ite (|nerv_regs#44| state) #b1 #b0) (concat (ite (|nerv_regs#43| state) #b1 #b0) (concat (ite (|nerv_regs#42| state) #b1 #b0) (concat (ite (|nerv_regs#41| state) #b1 #b0) (concat (ite (|nerv_regs#40| state) #b1 #b0) (concat (ite (|nerv_regs#39| state) #b1 #b0) (concat (ite (|nerv_regs#38| state) #b1 #b0) (concat (ite (|nerv_regs#37| state) #b1 #b0) (concat (ite (|nerv_regs#36| state) #b1 #b0) (concat (ite (|nerv_regs#35| state) #b1 #b0) (concat (ite (|nerv_regs#34| state) #b1 #b0) (concat (ite (|nerv_regs#33| state) #b1 #b0) (concat (ite (|nerv_regs#32| state) #b1 #b0) (concat (ite (|nerv_regs#31| state) #b1 #b0) (concat (ite (|nerv_regs#30| state) #b1 #b0) (concat (ite (|nerv_regs#29| state) #b1 #b0) (concat (ite (|nerv_regs#28| state) #b1 #b0) (concat (ite (|nerv_regs#27| state) #b1 #b0) (concat (ite (|nerv_regs#26| state) #b1 #b0) (concat (ite (|nerv_regs#25| state) #b1 #b0) (concat (ite (|nerv_regs#24| state) #b1 #b0) (concat (ite (|nerv_regs#23| state) #b1 #b0) (concat (ite (|nerv_regs#22| state) #b1 #b0) (concat (ite (|nerv_regs#21| state) #b1 #b0) (concat (ite (|nerv_regs#20| state) #b1 #b0) (concat (ite (|nerv_regs#19| state) #b1 #b0) (concat (ite (|nerv_regs#18| state) #b1 #b0) (concat (ite (|nerv_regs#17| state) #b1 #b0) (concat (ite (|nerv_regs#16| state) #b1 #b0) (concat (ite (|nerv_regs#15| state) #b1 #b0) (ite (|nerv_regs#14| state) #b1 #b0))))))))))))))))))))))))))))))))) ; $0$memwr$\regs$regfile.v:13$1_DATA[31:0]$4
(define-fun |nerv_regs_m:W0M regs| ((state |nerv_regs_s|)) (_ BitVec 32) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (concat (ite (|nerv_regs#2| state) #b1 #b0) (ite (|nerv_regs#2| state) #b1 #b0))))))))))))))))))))))))))))))))) ; { \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr \next_wr }
(define-fun |nerv_regs#5#1| ((state |nerv_regs_s|)) (Array (_ BitVec 5) (_ BitVec 32)) (ite (= (|nerv_regs_m:W0M regs| state) #b00000000000000000000000000000000) (|nerv_regs#5#0| state) (store (|nerv_regs#5#0| state) (|nerv_regs_m:W0A regs| state) (bvor (bvand (|nerv_regs_m:W0D regs| state) (|nerv_regs_m:W0M regs| state)) (bvand (select (|nerv_regs#5#0| state) (|nerv_regs_m:W0A regs| state)) (bvnot (|nerv_regs_m:W0M regs| state))))))) ; regs
(define-fun |nerv_regs_a| ((state |nerv_regs_s|)) Bool true)
(define-fun |nerv_regs_u| ((state |nerv_regs_s|)) Bool true)
(define-fun |nerv_regs_i| ((state |nerv_regs_s|)) Bool true)
(define-fun |nerv_regs_h| ((state |nerv_regs_s|)) Bool true)
(define-fun |nerv_regs_t| ((state |nerv_regs_s|) (next_state |nerv_regs_s|)) Bool 
  (= (|nerv_regs#5#1| state) (|nerv_regs#5#0| next_state)) ; regs
) ; end of module nerv_regs
; yosys-smt2-topmod nerv_regs
; end of yosys output
